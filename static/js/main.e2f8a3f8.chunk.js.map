{"version":3,"sources":["Components/MovieSearch/MovieSearchBar.tsx","Components/Home/index.tsx","api/InternalAPI.ts","api/TMDB.ts","Components/ImageWithOverlay.tsx","Components/MovieInfo/Actor.tsx","Components/MovieInfo/ImageCarousel.tsx","Components/MovieInfo/Actors.tsx","Popup.tsx","Components/MovieInfo/AddMovieToWatchHistory.tsx","Components/MovieInfo/MovieImages.tsx","Components/MovieInfo/WatchTimeline.tsx","Components/MovieInfo/index.tsx","Components/CircularRating.tsx","Components/MovieSearch/MovieCard.tsx","Components/MovieSearch/MovieGrid.tsx","App.tsx","index.tsx"],"names":["MovieSearchBar","props","navigate","useNavigate","_useState","useState","_useState2","Object","slicedToArray","query","setQuery","react_default","a","createElement","TextField","onChange","e","target","value","onKeyDown","key","concat","Home","MovieSearch_MovieSearchBar","react_router","watchDates","getWatchDates","movieId","addWatchDate","date","push","typedFetch","input","init","console","log","Promise","resolve","reject","fetch","then","res","json","catch","err","useRequestTMDB","endpoint","result","setResult","useEffect","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","process","sent","stop","TMDB","path","ImageWithOverlay","_ref","onClick","onMouseEnter","src","overlay","height","width","alwaysShowOverlay","imageDimensions","setImageDimensions","img","Image","onload","undefined","scale","setImageSize","className","style","Skeleton","variant","opacity","Actor","actor","Components_ImageWithOverlay","profile_path","fontWeight","name","character","ImageCarousel","children","display","flexDirection","overflow","Actors","credits","cast","MovieInfo_ImageCarousel","map","c","MovieInfo_Actor","id","Popup","isOpen","AddMovieToWatchHistory","title","isPopupOpen","setIsPopupOpen","updateLastSeen","sort","b","getTime","setLastSeen","length","_useState3","_useState4","inputDate","setInputDate","_useState5","_useState6","lastSeen","Fragment","toISOString","src_Popup_0","type","label","multiline","rows","Button","Date","MovieImages","imgs","alignItems","js","useKeyboardArrows","centerMode","centerSlidePercentage","autoPlay","infiniteLoop","autoFocus","showIndicators","showThumbs","interval","backdrops","i","file_path","WatchTimeline","objectDestructuringEmpty","MovieInfo","Number","useParams","movieInfo","alignContent","textAlign","release_date","getFullYear","MovieInfo_MovieImages","MovieInfo_Actors","overview","MovieInfo_WatchTimeline","MovieInfo_AddMovieToWatchHistory","CircularRating","Box","sx","position","CircularProgress","color","top","left","bottom","right","justifyContent","Typography","component","Math","round","MoviePreview","movie","movieDetails","poster_path","runtime","Components_CircularRating","vote_average","MovieGrid","movies","Grid","container","results","m","n","popularity","MovieCard","App","react_router_dom","element","MovieSearch_MovieGrid","Components_MovieInfo","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"mLAsBeA,EAhBQ,SAACC,GACtB,IAAMC,EAAWC,cADsBC,EAEbC,mBAAS,IAFIC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEhCK,EAFgCH,EAAA,GAEzBI,EAFyBJ,EAAA,GAIvC,OACEK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,SAAU,SAACC,GAAD,OAAON,EAASM,EAAEC,OAAOC,QACnCC,UAAW,SAACH,GAAD,MACC,UAAVA,EAAEI,IAAkBlB,EAAQ,WAAAmB,OAAYZ,IAAW,UCT9Ca,EAAA,SAACrB,GACd,OACEU,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,iDCVAC,EAAwC,GAEjCC,EAAgB,SAACC,GAC5B,OAAOF,EAAWE,IAAY,IAGnBC,EAAe,SAACD,EAAiBE,GACvCJ,EAAWE,KAAUF,EAAWE,GAAW,IAChDF,EAAWE,GAASG,KAAKD,IAIdE,EAAa,SACxBC,EACAC,GAIA,OAFAC,QAAQC,IAAR,cAAAd,OAA0BW,EAA1B,gBAAAX,OAA8CY,IAEvC,IAAIG,QAAW,SAACC,EAASC,GAC9BC,MAAMP,EAAOC,GACVO,KAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIC,UAC1BC,MAAM,SAACC,GAAD,OAASN,EAAOM,QCXvBC,EAAiB,SAAIC,EAAkBrC,GAAmB,IAAAL,EAClCC,mBAAmB,MADeC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvD2C,EADuDzC,EAAA,GAC/C0C,EAD+C1C,EAAA,GAa9D,OAXA2C,oBAAU,WACR1C,OAAA2C,EAAA,EAAA3C,CAAA4C,EAAAvC,EAAAwC,KAAC,SAAAC,IAAA,IAAAN,EAAA,OAAAI,EAAAvC,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACsB1B,EAAU,+BAAAV,OACEyB,EADF,aAAAzB,OAE3BqC,oCAF2BrC,OAG1BZ,EAAK,IAAAY,OAAOZ,GAAP,KAJX,OACOsC,EADPQ,EAAAI,KAMCX,EAAUD,GANX,wBAAAQ,EAAAK,SAAAP,KAAD9C,IAQC,CAACuC,EAAUrC,IAEPsC,GA0BMc,EAvBQ,SAACpD,GACtB,OAAOoC,EACL,gBADmB,wBAAAxB,OAEKZ,EAFL,iCAsBRoD,EAhBS,SAAClC,GACvB,OAAOkB,EAAc,UAAAxB,OAAsBM,KAe9BkC,EAZW,SAAClC,GACzB,OAAOkB,EAAc,UAAAxB,OAA4BM,EAA5B,aAWRkC,EAJK,SAACC,GACnB,yCAAAzC,OAA0CyC,IAG7BD,EARY,SAAClC,GAC1B,OAAOkB,EAAc,UAAAxB,OAAoBM,EAApB,+BC+BRoC,SA3DU,SAAAC,GAQZ,IAPXC,EAOWD,EAPXC,QACAC,EAMWF,EANXE,aACAC,EAKWH,EALXG,IACAC,EAIWJ,EAJXI,QACAC,EAGWL,EAHXK,OACAC,EAEWN,EAFXM,MACAC,EACWP,EADXO,kBACWnE,EACmCC,mBAGpC,MAJCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACJoE,EADIlE,EAAA,GACamE,EADbnE,EAAA,GA8BX,OAHA2C,oBAAU,WACJkB,GAtBe,WACnB,IAAMO,EAAM,IAAIC,MAChBD,EAAIP,IAAMA,EACVO,EAAIE,OAAS,WACX,QAAeC,IAAXR,QAAkCQ,IAAVP,EAC1BG,EAAmB,CAAEJ,SAAQC,eACxB,QAAiBO,IAAXR,QAAkCQ,IAAVP,EAAsB,CACzD,IAAIQ,EAAQ,EAEVA,OADaD,IAAXR,EACMA,EAASK,EAAIL,OAEbC,EAASI,EAAIJ,MAEvBG,EAAmB,CACjBJ,OAAQK,EAAIL,OAASS,EACrBR,MAAOI,EAAIJ,MAAQQ,MAOhBC,KAGTpE,EAAAC,EAAAC,cAAA,OAAKmE,UAAU,YAAYd,aAAcA,EAAcD,QAASA,QAC1CY,GAAnBL,EACC7D,EAAAC,EAAAC,cAAA,OACEsD,IAAKA,EACLa,UAAU,QACVC,MAAO,CACLZ,OAAQG,EAAgBH,OACxBC,MAAOE,EAAgBF,SAI3B3D,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAUC,QAAQ,cAAcd,OAAQ,IAAKC,MAAO,MAEtD3D,EAAAC,EAAAC,cAAA,OAAKmE,UAAU,UAAUC,MAAOV,EAAoB,CAAEa,QAAS,GAAM,IACnEzE,EAAAC,EAAAC,cAAA,OAAKmE,UAAU,kBAAkBZ,OC7C1BiB,EAfD,SAAArB,GAAsB,IAAnBsB,EAAmBtB,EAAnBsB,MACf,OACE3E,EAAAC,EAAAC,cAAC0E,EAAD,CACEjB,MAAO,IACPH,IAAKN,EAAiByB,EAAME,cAAgB,IAC5CpB,QACEzD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKoE,MAAO,CAAEQ,WAAY,SAAWH,EAAMI,MAD7C,MAC4D,IACzDJ,EAAMK,cCGFC,EARO,SAAA5B,GAAyB,IAAtB6B,EAAsB7B,EAAtB6B,SACvB,OACElF,EAAAC,EAAAC,cAAA,OAAKoE,MAAO,CAAEa,QAAS,OAAQC,cAAe,MAAOC,SAAU,WAC5DH,IC2DQI,EA7DA,SAAAjC,GAAwB,IAArBrC,EAAqBqC,EAArBrC,QACVuE,EAAUrC,EAAwBlC,GAExC,OAAgB,OAAZuE,EAAyBvF,EAAAC,EAAAC,cAAA,0BAE7BqF,EAAQC,KAGNxF,EAAAC,EAAAC,cAACuF,EAAD,CACEP,SAAUK,EAAQC,KAAKE,IAAI,SAACC,GAAD,OACzB3F,EAAAC,EAAAC,cAAC0F,EAAD,CAAOnF,IAAKkF,EAAEE,GAAIlB,MAAOgB,mBCPlBG,SATD,SAAAzC,GAAiC,IAA9B6B,EAA8B7B,EAA9B6B,SACf,OAD6C7B,EAApB0C,OAGvB/F,EAAAC,EAAAC,cAAA,OAAKmE,UAAU,SACbrE,EAAAC,EAAAC,cAAA,OAAKmE,UAAU,eAAea,IAHd,OCsDPc,MArDf,SAAA3C,GAAsD,IAApB4C,EAAoB5C,EAApB4C,MAAOJ,EAAaxC,EAAbwC,GAAapG,EACdC,oBAAS,GADKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC7CyG,EAD6CvG,EAAA,GAChCwG,EADgCxG,EAAA,GAG9CyG,EAAiB,WACrB,IAAMtF,EAAaC,EAAc8E,GAAIQ,KACnC,SAACpG,EAAGqG,GAAJ,OAAUrG,EAAEsG,UAAYD,EAAEC,YAE5BC,EAAY1F,EAAWA,EAAW2F,OAAS,KAPOC,EAUlBhH,mBAAS,IAVSiH,EAAA/G,OAAAC,EAAA,EAAAD,CAAA8G,EAAA,GAU7CE,EAV6CD,EAAA,GAUlCE,EAVkCF,EAAA,GAAAG,EAYpBpH,mBAAsB,MAZFqH,EAAAnH,OAAAC,EAAA,EAAAD,CAAAkH,EAAA,GAY7CE,EAZ6CD,EAAA,GAYnCP,EAZmCO,EAAA,GAkBpD,OAJAzE,oBAAU,WACR8D,KACC,IAGDpG,EAAAC,EAAAC,cAACF,EAAAC,EAAMgH,SAAP,KACGD,GAAYhH,EAAAC,EAAAC,cAAA,yBAAiB8G,EAASE,eACvClH,EAAAC,EAAAC,cAACiH,EAAD,CAAOpB,OAAQG,GACblG,EAAAC,EAAAC,cAAA,iBAAS+F,EAAT,2BACAjG,EAAAC,EAAAC,cAAA,SACEkH,KAAK,OACL7G,MAAOqG,EACPxG,SAAU,SAACC,GAAD,OAAOwG,EAAaxG,EAAEC,OAAOC,UAEzCP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWkH,MAAM,WAAWC,WAAS,EAACC,KAAM,IAC5CvH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CACEhD,QAAQ,WACRlB,QAAS,WACPrC,EAAa4E,EAAI,IAAI4B,KAAKb,IAC1BT,GAAe,GACfC,MALJ,QAWFpG,EAAAC,EAAAC,cAAA,UACEoD,QAAS,WACP6C,GAAe,KAFnB,sBCdSuB,EA5BK,SAAArE,GAAwB,IAArBrC,EAAqBqC,EAArBrC,QACf2G,EAAOzE,EAAuBlC,GAGpC,OAFAO,QAAQC,IAAImG,GAEC,OAATA,EAAsB3H,EAAAC,EAAAC,cAAA,sBAExBF,EAAAC,EAAAC,cAAA,OAAKoE,MAAO,CAAEsD,WAAY,WACxB5H,EAAAC,EAAAC,cAAC2H,EAAA,SAAD,CACEC,mBAAiB,EACjBC,YAAU,EACVC,sBAAuB,GACvBC,UAAQ,EACRC,cAAY,EACZC,WAAS,EACTC,gBAAgB,EAChBC,YAAY,EACZC,SAAU,KAETX,EAAKY,UAAU7C,IAAI,SAAC8C,GAAD,OAClBxI,EAAAC,EAAAC,cAAA,OAAKO,IAAK+H,EAAEC,WACVzI,EAAAC,EAAAC,cAAA,OAAKsD,IAAKN,EAAiBsF,EAAEC,0BCR1BC,MANf,SAAArF,GACE,OADiCzD,OAAA+I,EAAA,EAAA/I,CAAAyD,GAE/BrD,EAAAC,EAAAC,cAAA,aC+BW0I,EAlCG,SAAAvF,GAAgBzD,OAAA+I,EAAA,EAAA/I,CAAAyD,GAChC,IAAMwC,EAAKgD,OAAOC,cAAYjD,IAExBkD,EAAY7F,EAAqB2C,GAEvC,YAAW3B,IAAP2B,EAAyB7F,EAAAC,EAAAC,cAAA,gCAEX,OAAd6I,EAA2B/I,EAAAC,EAAAC,cAAA,yBAE7BF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKoE,MAAO,CAAE0E,aAAc,WAC1BhJ,EAAAC,EAAAC,cAAA,MAAIoE,MAAO,CAAE2E,UAAW,WACrBF,EAAU9C,MACV8C,EAAUG,cAAV,IAAAxI,OACK,IAAI+G,KAAKsB,EAAUG,cAAcC,cADtC,OAILnJ,EAAAC,EAAAC,cAACkJ,EAAD,CAAapI,QAAS6E,IACtB7F,EAAAC,EAAAC,cAACmJ,EAAD,CAAQrI,QAAS6E,IACjB7F,EAAAC,EAAAC,cAAA,OAAKmE,UAAU,sBACbrE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAAM6I,EAAUO,WAElBtJ,EAAAC,EAAAC,cAACqJ,EAAD,OAEFvJ,EAAAC,EAAAC,cAAA,OAAKmE,UAAU,sBACbrE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsJ,EAAD,CAAwBvD,MAAO8C,EAAU9C,MAAOJ,GAAIA,4CCR/C4D,MA1Bf,SAAApG,GAA0C,IAAhB9C,EAAgB8C,EAAhB9C,MACxB,OACEP,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,WAAYzE,QAAS,gBACxCnF,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAkBrF,QAAQ,cAAcjE,MAAOA,EAAOuJ,MAAM,YAC5D9J,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CACEC,GAAI,CACFI,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPN,SAAU,WACVzE,QAAS,OACTyC,WAAY,SACZuC,eAAgB,WAGlBnK,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CACE5F,QAAQ,UACR6F,UAAU,MACVP,MAAM,SAHR,GAAApJ,OAIK4J,KAAKC,MAAMhK,GAJhB,SCoBOiK,EA/BM,SAAAnH,GAAsB,IAAnBoH,EAAmBpH,EAAnBoH,MAChBlL,EAAWC,cACXkL,EAAexH,EAAqBuH,EAAM5E,GAAK4E,EAAM5E,GAAK,GAChE,OACE7F,EAAAC,EAAAC,cAAC0E,EAAD,CACErB,aAAc,WACZhC,QAAQC,IAAI,UAGd8B,QAAS,WACP/D,EAAQ,UAAAmB,OAAW+J,EAAM5E,MAE3BnC,OAAQ,IACRF,IAAKiH,EAAME,YAAczH,EAAiBuH,EAAME,kBAAezG,EAC/DT,QACEzD,EAAAC,EAAAC,cAACF,EAAAC,EAAMgH,SAAP,KACEjH,EAAAC,EAAAC,cAAA,WACGuK,EAAMxE,MACNwE,EAAMvB,cAAN,KAAAxI,OACM,IAAI+G,KAAKgD,EAAMvB,cAAcC,cADnC,MAGHnJ,EAAAC,EAAAC,cAAA,WAAMwK,GAAgBA,EAAaE,QAAnC,YACA5K,EAAAC,EAAAC,cAAC2K,EAAD,CACEtK,MAAOkK,EAAMK,aAAoC,GAArBL,EAAMK,aAAoB,QCPnDC,EAlBG,SAAA1H,GAAgBzD,OAAA+I,EAAA,EAAA/I,CAAAyD,GAAA,IACxBvD,EAAUgJ,cAAVhJ,MACR,QAAcoE,IAAVpE,EAAqB,OAAOE,EAAAC,EAAAC,cAAA,sCAEhC,IAAM8K,EAAS9H,EAAoBpD,GAEnC,OAAc,MAAVkL,EAAuBhL,EAAAC,EAAAC,cAAA,yBAEzBF,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,CAAMC,WAAS,GACZF,EAAOG,QACL9E,KAAK,SAAC+E,EAAGC,GAAJ,OAAWA,EAAEC,YAAc,IAAMF,EAAEE,YAAc,KACtD5F,IAAI,SAAC0F,GAAD,OACHpL,EAAAC,EAAAC,cAACqL,EAAD,CAAc9K,IAAK2K,EAAEvF,GAAI4E,MAAOW,QC2B3BI,MAdf,WACE,OACExL,EAAAC,EAAAC,cAACuL,EAAA,EAAD,KACEzL,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOsC,KAAK,IAAIuI,QAAS1L,EAAAC,EAAAC,cAACS,EAAD,OACvBX,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOsC,KAAK,gBAAgBuI,QAAS1L,EAAAC,EAAAC,cAACyL,EAAD,QACrC3L,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOsC,KAAK,YAAYuI,QAAS1L,EAAAC,EAAAC,cAAC0L,EAAD,QACjC5L,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOsC,KAAK,IAAIuI,QAAS1L,EAAAC,EAAAC,cAAA,mCCpCtB2L,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACHjM,EAAAC,EAAAC,cAACF,EAAAC,EAAMiM,WAAP,KACElM,EAAAC,EAAAC,cAACiM,EAAD","file":"static/js/main.e2f8a3f8.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport { useNavigate } from \"react-router-dom\";\n\ntype Props = {};\n\nconst MovieSearchBar = (props: Props) => {\n  const navigate = useNavigate();\n  const [query, setQuery] = useState(\"\");\n\n  return (\n    <div>\n      <TextField\n        onChange={(e) => setQuery(e.target.value)}\n        onKeyDown={(e) =>\n          e.key === \"Enter\" ? navigate(`/search/${query}`) : null\n        }\n      />\n    </div>\n  );\n};\n\nexport default MovieSearchBar;\n","import React from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport MovieSearchBar from \"../MovieSearch/MovieSearchBar\";\n\ntype Props = {};\n\nexport default (props: Props) => {\n  return (\n    <div>\n      <MovieSearchBar />\n      <Outlet />\n    </div>\n  );\n};\n","const watchDates: { [key: string]: Date[] } = {};\n\nexport const getWatchDates = (movieId: number): Date[] => {\n  return watchDates[movieId] || [];\n};\n\nexport const addWatchDate = (movieId: number, date: Date) => {\n  if (!watchDates[movieId]) watchDates[movieId] = [];\n  watchDates[movieId].push(date);\n};\n\n// Wrapper for getting a specific type from fetch-API\nexport const typedFetch = <T>(\n  input: string,\n  init?: RequestInit | undefined\n) => {\n  console.log(`Requesting ${input} with query ${init}`);\n\n  return new Promise<T>((resolve, reject) => {\n    fetch(input, init)\n      .then((res) => resolve(res.json()))\n      .catch((err) => reject(err));\n  });\n};\n","import { useEffect, useState } from \"react\";\nimport { typedFetch } from \"./InternalAPI\";\nimport {\n  Credits,\n  MovieImagesType,\n  MovieOverviewType,\n  MovieType,\n} from \"./TMDB.types\";\n\n// Wrapper-Hook to request any TMDB-endpoint\nconst useRequestTMDB = <T>(endpoint: string, query?: string) => {\n  const [result, setResult] = useState<null | T>(null);\n  useEffect(() => {\n    (async () => {\n      const result = await typedFetch<T>(\n        `https://api.themoviedb.org/3${endpoint}?api_key=${\n          process.env.REACT_APP_TMDB_API_KEY\n        }${query ? `&${query}` : ``}`\n      );\n      setResult(result);\n    })();\n  }, [endpoint, query]);\n\n  return result;\n};\n\nconst useSearchMovie = (query: string) => {\n  return useRequestTMDB<{ results: MovieOverviewType[] }>(\n    \"/search/movie\",\n    `language=en-US&query=${query}&page=1&include_adult=false`\n  );\n};\n\nconst useGetMovieInfo = (movieId: string | number) => {\n  return useRequestTMDB<MovieType>(`/movie/${movieId}`);\n};\n\nconst useGetMovieImages = (movieId: number) => {\n  return useRequestTMDB<MovieImagesType>(`/movie/${movieId}/images`);\n};\n\nconst useGetMovieCredits = (movieId: number) => {\n  return useRequestTMDB<Credits>(`/movie/${movieId}/credits`);\n};\n\nconst getImageURL = (path: string): string => {\n  return `https://image.tmdb.org/t/p/w500/${path}`;\n};\n\nexport default {\n  useRequestTMDB,\n  useSearchMovie,\n  useGetMovieInfo,\n  useGetMovieImages,\n  getImageURL,\n  useGetMovieCredits,\n};\n","import { Skeleton } from \"@mui/material\";\nimport React, { ReactNode, useEffect, useRef, useState } from \"react\";\nimport \"./overlay.css\";\n\ntype Props = {\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n  onMouseEnter?: React.MouseEventHandler<HTMLDivElement>;\n  src?: string;\n  overlay: ReactNode;\n  height?: number;\n  width?: number;\n  alwaysShowOverlay?: boolean;\n};\n\nconst ImageWithOverlay = ({\n  onClick,\n  onMouseEnter,\n  src,\n  overlay,\n  height,\n  width,\n  alwaysShowOverlay,\n}: Props) => {\n  const [imageDimensions, setImageDimensions] = useState<{\n    height: number;\n    width: number;\n  } | null>(null);\n\n  const setImageSize = () => {\n    const img = new Image();\n    img.src = src!;\n    img.onload = () => {\n      if (height !== undefined && width !== undefined) {\n        setImageDimensions({ height, width });\n      } else if (!(height === undefined && width === undefined)) {\n        let scale = 1;\n        if (height !== undefined) {\n          scale = height / img.height;\n        } else {\n          scale = width! / img.width;\n        }\n        setImageDimensions({\n          height: img.height * scale,\n          width: img.width * scale,\n        });\n      }\n    };\n  };\n\n  useEffect(() => {\n    if (src) setImageSize();\n  });\n  return (\n    <div className=\"container\" onMouseEnter={onMouseEnter} onClick={onClick}>\n      {imageDimensions != undefined ? (\n        <img\n          src={src}\n          className=\"image\"\n          style={{\n            height: imageDimensions.height,\n            width: imageDimensions.width,\n          }}\n        />\n      ) : (\n        <Skeleton variant=\"rectangular\" height={225} width={150} />\n      )}\n      <div className=\"overlay\" style={alwaysShowOverlay ? { opacity: 1 } : {}}>\n        <div className=\"content-parent\">{overlay}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageWithOverlay;\n","import React from \"react\";\nimport TMDB from \"../../api/TMDB\";\nimport { ActorType } from \"../../api/TMDB.types\";\nimport ImageWithOverlay from \"../ImageWithOverlay\";\n\ntype Props = { actor: ActorType };\n\nconst Actor = ({ actor }: Props) => {\n  return (\n    <ImageWithOverlay\n      width={150}\n      src={TMDB.getImageURL(actor.profile_path || \"\")}\n      overlay={\n        <div>\n          <div style={{ fontWeight: \"bold\" }}>{actor.name}</div> as{\" \"}\n          {actor.character}\n        </div>\n      }\n    />\n  );\n};\n\nexport default Actor;\n","import {\n  Grid,\n  ImageList,\n  ImageListItem,\n  ImageListItemBar,\n} from \"@mui/material\";\nimport React from \"react\";\n\ntype Props = { children: React.ReactNode[] };\n\nconst ImageCarousel = ({ children }: Props) => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", overflow: \"scroll\" }}>\n      {children}\n    </div>\n  );\n};\n\nexport default ImageCarousel;\n","import React from \"react\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { createWatchCompilerHost } from \"typescript\";\nimport TMDB from \"../../api/TMDB\";\nimport Actor from \"./Actor\";\nimport ImageCarousel from \"./ImageCarousel\";\nimport MoviePerson from \"./MoviePerson\";\n\ntype Props = { movieId: number };\n\nconst Actors = ({ movieId }: Props) => {\n  const credits = TMDB.useGetMovieCredits(movieId);\n\n  if (credits === null) return <div>Loading...</div>;\n\n  credits.cast;\n\n  return (\n    <ImageCarousel\n      children={credits.cast.map((c) => (\n        <Actor key={c.id} actor={c} />\n      ))}\n    />\n  );\n\n  // return (\n  //   <React.Fragment>\n  //     <Carousel\n  //       useKeyboardArrows\n  //       centerMode\n  //       centerSlidePercentage={10}\n  //       autoFocus\n  //       showIndicators={false}\n  //       showThumbs={false}\n  //       interval={2000}\n  //     >\n  //       {credits.cast\n  //         .filter((c) => c.profile_path !== null)\n  //         .map((c) => (\n  //           <div>\n  //             <img src={TMDB.getImageURL(c.profile_path || \"\")} width={100} />\n  //             <p className=\"legend\">\n  //               {c.name} as {c.character}\n  //             </p>\n  //           </div>\n  //         ))}\n  //     </Carousel>\n  //     <Carousel\n  //       useKeyboardArrows\n  //       centerMode\n  //       centerSlidePercentage={10}\n  //       autoFocus\n  //       showIndicators={false}\n  //       showThumbs={false}\n  //       interval={2000}\n  //     >\n  //       {credits.crew\n  //         .filter((c) => c.profile_path !== null)\n  //         .map((c) => (\n  //           <div>\n  //             <img src={TMDB.getImageURL(c.profile_path || \"\")} width={100} />\n  //             <p className=\"legend\">\n  //               {c.name} as {c.job}\n  //             </p>\n  //           </div>\n  //         ))}\n  //     </Carousel>\n  //   </React.Fragment>\n  // );\n};\n\nexport default Actors;\n","import React, { Children } from \"react\";\nimport \"./Popup.css\";\n\ntype Props = { children: React.ReactNode; isOpen: boolean };\n\nconst Popup = ({ children, isOpen }: Props) => {\n  if (!isOpen) return null;\n  return (\n    <div className=\"popup\">\n      <div className=\"popup_inner\">{children}</div>\n    </div>\n  );\n};\n\nexport default Popup;\n","import { Button, TextField } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { getWatchDates, addWatchDate } from \"../../api/InternalAPI\";\nimport Popup from \"../../Popup\";\n\ntype Props = { title?: string; id: number };\n\nfunction AddMovieToWatchHistory({ title, id }: Props) {\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  const updateLastSeen = () => {\n    const watchDates = getWatchDates(id).sort(\n      (a, b) => a.getTime() - b.getTime()\n    );\n    setLastSeen(watchDates[watchDates.length - 1]);\n  };\n\n  const [inputDate, setInputDate] = useState(\"\");\n\n  const [lastSeen, setLastSeen] = useState<Date | null>(null);\n\n  useEffect(() => {\n    updateLastSeen();\n  }, []);\n\n  return (\n    <React.Fragment>\n      {lastSeen && <div>Last seen: {lastSeen.toISOString()}</div>}\n      <Popup isOpen={isPopupOpen}>\n        <h1>Add {title} to your watch history:</h1>\n        <input\n          type=\"date\"\n          value={inputDate}\n          onChange={(e) => setInputDate(e.target.value)}\n        />\n        <br />\n        <TextField label=\"Comments\" multiline rows={4}></TextField>\n        <br />\n        <Button\n          variant=\"outlined\"\n          onClick={() => {\n            addWatchDate(id, new Date(inputDate));\n            setIsPopupOpen(false);\n            updateLastSeen();\n          }}\n        >\n          OK!\n        </Button>\n      </Popup>\n      <button\n        onClick={() => {\n          setIsPopupOpen(true);\n        }}\n      >\n        Add seen\n      </button>\n    </React.Fragment>\n  );\n}\n\nexport default AddMovieToWatchHistory;\n","import React from \"react\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport TMDB from \"../../api/TMDB\";\n\ntype Props = { movieId: number };\n\nconst MovieImages = ({ movieId }: Props) => {\n  const imgs = TMDB.useGetMovieImages(movieId);\n  console.log(imgs);\n\n  if (imgs === null) return <div>Loading</div>;\n  return (\n    <div style={{ alignItems: \"center\" }}>\n      <Carousel\n        useKeyboardArrows\n        centerMode\n        centerSlidePercentage={50}\n        autoPlay\n        infiniteLoop\n        autoFocus\n        showIndicators={false}\n        showThumbs={false}\n        interval={2000}\n      >\n        {imgs.backdrops.map((i) => (\n          <div key={i.file_path}>\n            <img src={TMDB.getImageURL(i.file_path)} />\n          </div>\n        ))}\n      </Carousel>\n    </div>\n  );\n};\n\nexport default MovieImages;\n","import {\n  Timeline,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineItem,\n  TimelineOppositeContent,\n  TimelineSeparator,\n} from \"@mui/lab\";\nimport React from \"react\";\n\ntype Props = {};\n\nfunction WatchTimeline({}: Props) {\n  return (\n    <div></div>\n  );\n}\n\nexport default WatchTimeline;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport TMDB from \"../../api/TMDB\";\nimport { MovieType } from \"../../api/TMDB.types\";\nimport Actors from \"./Actors\";\nimport AddMovieToWatchHistory from \"./AddMovieToWatchHistory\";\nimport MovieImages from \"./MovieImages\";\nimport \"./style.css\";\nimport WatchTimeline from \"./WatchTimeline\";\n\ntype Props = {};\n\nconst MovieInfo = ({}: Props) => {\n  const id = Number(useParams().id);\n\n  const movieInfo = TMDB.useGetMovieInfo(id);\n\n  if (id === undefined) return <div>An error occured!</div>;\n\n  if (movieInfo === null) return <div>Loading...</div>;\n  return (\n    <div>\n      <div style={{ alignContent: \"center\" }}>\n        <h1 style={{ textAlign: \"center\" }}>\n          {movieInfo.title}\n          {movieInfo.release_date &&\n            `(${new Date(movieInfo.release_date).getFullYear()})`}\n        </h1>\n      </div>\n      <MovieImages movieId={id} />\n      <Actors movieId={id} />\n      <div className=\"div-beside-wrapper\">\n        <div>\n          <div>{movieInfo.overview}</div>\n        </div>\n        <WatchTimeline />\n      </div>\n      <div className=\"div-beside-wrapper\">\n        <div>\n          <AddMovieToWatchHistory title={movieInfo.title} id={id} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","import { Box, CircularProgress, Typography } from \"@mui/material\";\nimport React from \"react\";\n\ntype Props = { value: number };\n\nfunction CircularRating({ value }: Props) {\n  return (\n    <Box sx={{ position: \"relative\", display: \"inline-flex\" }}>\n      <CircularProgress variant=\"determinate\" value={value} color=\"warning\" />\n      <Box\n        sx={{\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          position: \"absolute\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Typography\n          variant=\"caption\"\n          component=\"div\"\n          color=\"white\"\n        >{`${Math.round(value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default CircularRating;\n","import { Skeleton } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport TMDB from \"../../api/TMDB\";\nimport { MovieOverviewType } from \"../../api/TMDB.types\";\nimport CircularRating from \"../CircularRating\";\nimport ImageWithOverlay from \"../ImageWithOverlay\";\n\ntype Props = { movie: MovieOverviewType };\n\nconst MoviePreview = ({ movie }: Props) => {\n  const navigate = useNavigate();\n  const movieDetails = TMDB.useGetMovieInfo(movie.id ? movie.id : 0);\n  return (\n    <ImageWithOverlay\n      onMouseEnter={() => {\n        console.log(\"enter\");\n        // TODO: Request movie info only if card was entered\n      }}\n      onClick={() => {\n        navigate(`/movie/${movie.id}`);\n      }}\n      height={400}\n      src={movie.poster_path ? TMDB.getImageURL(movie.poster_path) : undefined}\n      overlay={\n        <React.Fragment>\n          <div>\n            {movie.title}\n            {movie.release_date &&\n              ` (${new Date(movie.release_date).getFullYear()})`}\n          </div>\n          <div>{movieDetails && movieDetails.runtime} minutes</div>\n          <CircularRating\n            value={movie.vote_average ? movie.vote_average * 10 : 0}\n          />\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default MoviePreview;\n","import { Grid } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport MoviePreview from \"./MovieCard\";\nimport TMDB from \"../../api/TMDB\";\nimport { useParams } from \"react-router-dom\";\n\ntype Props = {};\n\nconst MovieGrid = ({}: Props) => {\n  const { query } = useParams();\n  if (query === undefined) return <div>Please provide a query!</div>;\n\n  const movies = TMDB.useSearchMovie(query);\n\n  if (movies == null) return <div>Loading...</div>;\n  return (\n    <Grid container>\n      {movies.results\n        .sort((m, n) => (n.popularity || 0) - (m.popularity || 0))\n        .map((m) => (\n          <MoviePreview key={m.id} movie={m} />\n        ))}\n    </Grid>\n  );\n};\n\nexport default MovieGrid;\n","import React from \"react\";\nimport Home from \"./Components/Home\";\nimport { Routes, Route, BrowserRouter, Link, Outlet } from \"react-router-dom\";\nimport MovieInfo from \"./Components/MovieInfo\";\nimport MovieGrid from \"./Components/MovieSearch/MovieGrid\";\n\n// const Router = () => {\n//   const routes: RouteObject[] = [\n//     {\n//       path: \"/\",\n//       element: <Home />,\n//       children: [\n//         {\n//           path: \"search\",\n//           element: <MovieSearch />,\n//           children: [{ path: \":query\", element: <MovieSearch /> }],\n//         },\n//         {\n//           path: \"movie\",\n//           element: <div>Movie</div>,\n//           children: [\n//             {\n//               path: \":id\",\n//               element: <MovieInfo />,\n//             },\n//           ],\n//         },\n//       ],\n//     },\n//   ];\n//   return useRoutes(routes);\n// };\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home />}>\n          <Route path=\"search/:query\" element={<MovieGrid />} />\n          <Route path=\"movie/:id\" element={<MovieInfo />} />\n          <Route path=\"*\" element={<div>Page not found</div>} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}